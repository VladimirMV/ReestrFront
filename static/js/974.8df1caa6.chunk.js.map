{"version":3,"file":"static/js/974.8df1caa6.chunk.js","mappings":"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","sources":["pages/RegistrationPage/RegistrationPage.jsx","styles/fonStyle.jsx"],"sourcesContent":["import Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\n\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { Link, useLocation } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { registerUser } from 'redux/auth/auth-operations';\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { customStylesFonRegistration } from 'styles/fonStyle';\n\nconst defaultTheme = createTheme({\n  palette: {\n    primary: {\n      main: '#608B38',\n    },\n  },\n});\n\nexport default function Register() {\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const onSignUp = location.pathname === '/register';\n  const [empty, setEmpty] = useState({ name: false, email: false });\n  const [passwordValid, setPasswordValid] = useState({ password: false });\n  const navigation = useNavigate();\n  const handleSubmit = e => {\n    e.preventDefault();\n    const data = new FormData(e.currentTarget);\n\n    const user = {\n      name: data.get('name'),\n      email: data.get('email'),\n      password: data.get('password'),\n    };\n\n    console.log('form reg user: ', user);\n\n    if (user.name === '') {\n      setEmpty(prev => ({ ...prev, name: true }));\n      return;\n    }\n    if (user.email === '') {\n      setEmpty(prev => ({ ...prev, email: true }));\n      return;\n    }\n\n    if (user.password.length < 7 && user.password === '') {\n      setPasswordValid(prev => ({ ...prev, password: true }));\n      return;\n    }\n    dispatch(registerUser(user));\n    console.log(\"user ========\",\tuser)\n    navigation ('/');\n    const confirmationMessage =  'На ваш E-mail  отправлено письмо для  подтверждения адреса почты';\n    window.confirm(confirmationMessage);\n    window.location.reload();\n  };\n\n  return (\n    <ThemeProvider theme={defaultTheme}>\n      <Grid\n        container\n        component=\"main\"\n        style={customStylesFonRegistration }\n        sx={{\n          height: '100vh',\n          \n          backgroundRepeat: 'no-repeat',\n          backgroundColor: t =>\n            t.palette.mode === 'light'\n              ? t.palette.grey[50]\n              : t.palette.grey[900],\n          backgroundSize: 'cover',\n          backgroundPosition: 'center',\n        }}\n      >\n        <CssBaseline />\n        <Grid item xs={false} sm={6} md={7} />\n        <Grid\n          item\n          xs={12}\n          sm={6}\n          md={5}\n          component={Paper}\n          elevation={24}\n          square\n          sx={{\n            height: '100vh',\n            background: '#ffffffb0',\n            backdropFilter: 'blur(7.5px)',\n          }}\n        >\n          <Box\n            sx={{\n              my: 8,\n              mx: 4,\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n            }}\n          >\n            <Avatar sx={{ m: 1, bgcolor: 'primary.main', boxShadow: 3 }}>\n              <LockOutlinedIcon />\n            </Avatar>\n            <Typography\n              component=\"h1\"\n              variant=\"h5\"\n              sx={{\n                color: '#fff',\n                textShadow: '-1px -1px 1px #ffffff31, 1px 1px 1px #00000031',\n              }}\n            >\n              SignUp\n            </Typography>\n            <Box\n              component=\"form\"\n              noValidate\n              onSubmit={handleSubmit}\n              sx={{ mt: 3 }}\n            >\n              <Grid container spacing={2}>\n                <Grid item xs={12}>\n                  <TextField\n                    required\n                    fullWidth\n                    id=\"name\"\n                    label=\"Name\"\n                    autoComplete=\"given-name\"\n                    name=\"name\"\n                    autoFocus\n                    error={empty.name}\n                    sx={{ boxShadow: 3 }}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    required\n                    fullWidth\n                    id=\"email\"\n                    label=\"Email Address\"\n                    name=\"email\"\n                    autoComplete=\"email\"\n                    error={empty.email}\n                    sx={{ boxShadow: 3 }}\n                    helperText={\n                      'Example of valid email address: qwerty1@example.com'\n                    }\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    required\n                    fullWidth\n                    name=\"password\"\n                    label=\"Password\"\n                    type=\"password\"\n                    id=\"password\"\n                    autoComplete=\"new-password\"\n                    sx={{ boxShadow: 3 }}\n                    //inputProps={{ minLength: 7 }}\n                    error={passwordValid.length < 7}\n                    onChange={e => setPasswordValid(e.target.value)}\n                    helperText={'Password should contains at least 7 symbols'}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <FormControlLabel\n                    control={\n                      <Checkbox value=\"allowExtraEmails\" color=\"primary\" />\n                    }\n                    label=\"I want to receive  marketing promotions and updates via email.\"\n                  />\n                  <Button\n                    type=\"submit\"\n                    fullWidth\n                    variant=\"contained\"\n                    sx={{ mt: 3, mb: 2, boxShadow: 3 }}\n                  >\n                    Sign Up\n                  </Button>\n                </Grid>\n              </Grid>\n\n              <Grid container justifyContent=\"flex-end\">\n                <Grid item>\n                  {onSignUp && (\n                    <Link to={`/login`} variant=\"body2\">\n                      Already have an account? Sign in\n                    </Link>\n                  )}\n                </Grid>\n              </Grid>\n            </Box>\n          </Box>\n        </Grid>\n      </Grid>\n    </ThemeProvider>\n  );\n}\n// This code imports several elements from the Material - UI library, including\n// Avatar, Button, TextField, FormControlLabel, Checkbox, Paper, Grid, Box, LockOutlinedIcon, Typography,\n// createTheme, ThemeProvider, Link, useLocation, useDispatch, and useState.\n\n// It defines a functional component named \"Register\" that handles user registration and includes a form\n// with fields for name, email, and password.It also includes a checkbox for opting into email promotions \n// and updates, as well as a link to the login page.\n\n// When the user submits the form, the component checks to ensure that the name and email fields are not empty,\n// and that the password field contains at least seven characters.If any of these criteria are not met, the component \n// sets error states and prevents the form from being submitted.\n\n// If the form is submitted successfully, the component triggers a Redux action to register the user using the provided information.\n\n// Finally, the component renders a Material-UI Grid, Paper, Avatar, and other elements to create a standardized user interface for \n//the registration form.The appearance of the elements is defined using inline CSS styling.","// import { HomeFon } from '../img/HomeFon.jpg';\n\nexport const customStylesFonContacts = {\n    backgroundImage: `url(\"https://catherineasquithgallery.com/serye-fony/13264-fon-sajta-seryj-81-foto.html\")`\n}\n\nexport const customStylesFonHome = {\n    backgroundImage: `url(\"https://res.cloudinary.com/dzbll3bb6/image/upload/v1698576690/HomeFone1_brpk0o.jpg\")`\n}\n\nexport const customStylesFonLogin = {\n    backgroundImage: `url(\"https://res.cloudinary.com/dzbll3bb6/image/upload/v1698576690/HomeFone1_brpk0o.jpg\")`\n}\n export const customStylesFonRegistration = {\n    backgroundImage: `url(\"https://res.cloudinary.com/dzbll3bb6/image/upload/v1698576690/HomeFone1_brpk0o.jpg\")`\n }"],"names":["defaultTheme","createTheme","palette","primary","main","Register","dispatch","useDispatch","onSignUp","useLocation","pathname","_useState","useState","name","email","_useState2","_slicedToArray","empty","setEmpty","_useState3","password","_useState4","passwordValid","setPasswordValid","navigation","useNavigate","_jsx","ThemeProvider","theme","children","_jsxs","Grid","container","component","style","customStylesFonRegistration","sx","height","backgroundRepeat","backgroundColor","t","mode","grey","backgroundSize","backgroundPosition","CssBaseline","item","xs","sm","md","Paper","elevation","square","background","backdropFilter","Box","my","mx","display","flexDirection","alignItems","Avatar","m","bgcolor","boxShadow","LockOutlinedIcon","Typography","variant","color","textShadow","noValidate","onSubmit","e","preventDefault","data","FormData","currentTarget","user","get","console","log","length","prev","_objectSpread","registerUser","window","confirm","location","reload","mt","spacing","TextField","required","fullWidth","id","label","autoComplete","autoFocus","error","helperText","type","onChange","target","value","FormControlLabel","control","Checkbox","Button","mb","justifyContent","Link","to","customStylesFonContacts","backgroundImage","customStylesFonHome","customStylesFonLogin"],"sourceRoot":""}