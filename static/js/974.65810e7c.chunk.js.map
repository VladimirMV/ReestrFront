{"version":3,"file":"static/js/974.65810e7c.chunk.js","mappings":"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","sources":["pages/RegistrationPage/RegistrationPage.jsx"],"sourcesContent":["import Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\n\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { Link, useLocation } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { registerUser } from 'redux/auth/auth-operations';\nimport { useState } from 'react';\n\nconst defaultTheme = createTheme({\n  palette: {\n    primary: {\n      main: '#608B38',\n    },\n  },\n});\n\nexport default function Register() {\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const onSignUp = location.pathname === '/register';\n  const [empty, setEmpty] = useState({ name: false, email: false });\n  const [passwordValid, setPasswordValid] = useState({ password: false });\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const data = new FormData(e.currentTarget);\n\n    const user = {\n      name: data.get('name'),\n      email: data.get('email'),\n      password: data.get('password'),\n    };\n\n    console.log('form reg user: ', user);\n\n    if (user.name === '') {\n      setEmpty(prev => ({ ...prev, name: true }));\n      return;\n    }\n    if (user.email === '') {\n      setEmpty(prev => ({ ...prev, email: true }));\n      return;\n    }\n\n    if (user.password.length < 7 && user.password === '') {\n      setPasswordValid(prev => ({ ...prev, password: true }));\n      return;\n    }\n\n    dispatch(registerUser(user));\n  };\n\n  return (\n    <ThemeProvider theme={defaultTheme}>\n      <Grid\n        container\n        component=\"main\"\n        sx={{\n          height: '100vh',\n          backgroundImage: `url(\"https://phonoteka.org/uploads/posts/2022-02/thumbs/1645103314_44-phonoteka-org-p-fon-zelenii-gradient-nezhnii-47.jpg\")`,\n          backgroundRepeat: 'no-repeat',\n          backgroundColor: t =>\n            t.palette.mode === 'light'\n              ? t.palette.grey[50]\n              : t.palette.grey[900],\n          backgroundSize: 'cover',\n          backgroundPosition: 'center',\n        }}\n      >\n        <CssBaseline />\n        <Grid item xs={false} sm={6} md={7} />\n        <Grid\n          item\n          xs={12}\n          sm={6}\n          md={5}\n          component={Paper}\n          elevation={24}\n          square\n          sx={{\n            height: '100vh',\n            background: '#ffffffb0',\n            backdropFilter: 'blur(7.5px)',\n          }}\n        >\n          <Box\n            sx={{\n              my: 8,\n              mx: 4,\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n            }}\n          >\n            <Avatar sx={{ m: 1, bgcolor: 'primary.main', boxShadow: 3 }}>\n              <LockOutlinedIcon />\n            </Avatar>\n            <Typography\n              component=\"h1\"\n              variant=\"h5\"\n              sx={{\n                color: '#fff',\n                textShadow: '-1px -1px 1px #ffffff31, 1px 1px 1px #00000031',\n              }}\n            >\n              SignUp\n            </Typography>\n            <Box\n              component=\"form\"\n              noValidate\n              onSubmit={handleSubmit}\n              sx={{ mt: 3 }}\n            >\n              <Grid container spacing={2}>\n                <Grid item xs={12}>\n                  <TextField\n                    required\n                    fullWidth\n                    id=\"name\"\n                    label=\"Name\"\n                    autoComplete=\"given-name\"\n                    name=\"name\"\n                    autoFocus\n                    error={empty.name}\n                    sx={{ boxShadow: 3 }}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    required\n                    fullWidth\n                    id=\"email\"\n                    label=\"Email Address\"\n                    name=\"email\"\n                    autoComplete=\"email\"\n                    error={empty.email}\n                    sx={{ boxShadow: 3 }}\n                    helperText={\n                      'Example of valid email address: qwerty1@example.com'\n                    }\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    required\n                    fullWidth\n                    name=\"password\"\n                    label=\"Password\"\n                    type=\"password\"\n                    id=\"password\"\n                    autoComplete=\"new-password\"\n                    sx={{ boxShadow: 3 }}\n                    //inputProps={{ minLength: 7 }}\n                    error={passwordValid.length < 7}\n                    onChange={e => setPasswordValid(e.target.value)}\n                    helperText={'Password should contains at least 7 symbols'}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <FormControlLabel\n                    control={\n                      <Checkbox value=\"allowExtraEmails\" color=\"primary\" />\n                    }\n                    label=\"I want to receive  marketing promotions and updates via email.\"\n                  />\n                  <Button\n                    type=\"submit\"\n                    fullWidth\n                    variant=\"contained\"\n                    sx={{ mt: 3, mb: 2, boxShadow: 3 }}\n                  >\n                    Sign Up\n                  </Button>\n                </Grid>\n              </Grid>\n\n              <Grid container justifyContent=\"flex-end\">\n                <Grid item>\n                  {onSignUp && (\n                    <Link to={`/login`} variant=\"body2\">\n                      Already have an account? Sign in\n                    </Link>\n                  )}\n                </Grid>\n              </Grid>\n            </Box>\n          </Box>\n        </Grid>\n      </Grid>\n    </ThemeProvider>\n  );\n}\n// This code imports several elements from the Material - UI library, including\n// Avatar, Button, TextField, FormControlLabel, Checkbox, Paper, Grid, Box, LockOutlinedIcon, Typography,\n// createTheme, ThemeProvider, Link, useLocation, useDispatch, and useState.\n\n// It defines a functional component named \"Register\" that handles user registration and includes a form\n// with fields for name, email, and password.It also includes a checkbox for opting into email promotions \n// and updates, as well as a link to the login page.\n\n// When the user submits the form, the component checks to ensure that the name and email fields are not empty,\n// and that the password field contains at least seven characters.If any of these criteria are not met, the component \n// sets error states and prevents the form from being submitted.\n\n// If the form is submitted successfully, the component triggers a Redux action to register the user using the provided information.\n\n// Finally, the component renders a Material-UI Grid, Paper, Avatar, and other elements to create a standardized user interface for \n//the registration form.The appearance of the elements is defined using inline CSS styling."],"names":["defaultTheme","createTheme","palette","primary","main","Register","dispatch","useDispatch","onSignUp","useLocation","pathname","_useState","useState","name","email","_useState2","_slicedToArray","empty","setEmpty","_useState3","password","_useState4","passwordValid","setPasswordValid","_jsx","ThemeProvider","theme","children","_jsxs","Grid","container","component","sx","height","backgroundImage","backgroundRepeat","backgroundColor","t","mode","grey","backgroundSize","backgroundPosition","CssBaseline","item","xs","sm","md","Paper","elevation","square","background","backdropFilter","Box","my","mx","display","flexDirection","alignItems","Avatar","m","bgcolor","boxShadow","LockOutlinedIcon","Typography","variant","color","textShadow","noValidate","onSubmit","e","preventDefault","data","FormData","currentTarget","user","get","console","log","length","prev","_objectSpread","registerUser","mt","spacing","TextField","required","fullWidth","id","label","autoComplete","autoFocus","error","helperText","type","onChange","target","value","FormControlLabel","control","Checkbox","Button","mb","justifyContent","Link","to"],"sourceRoot":""}